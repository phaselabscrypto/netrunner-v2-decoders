use carbon_core::{borsh, CarbonDeserialize};

#[derive(
    CarbonDeserialize, Debug, serde::Serialize, serde::Deserialize, PartialEq, Eq, Clone, Hash,
)]
pub enum StrategyConfigOption {
    UpdateDepositCap,
    UpdateDepositCapIxn,
    UpdateWithdrawalCapACapacity,
    UpdateWithdrawalCapAInterval,
    UpdateWithdrawalCapACurrentTotal,
    UpdateWithdrawalCapBCapacity,
    UpdateWithdrawalCapBInterval,
    UpdateWithdrawalCapBCurrentTotal,
    UpdateMaxDeviationBps,
    UpdateSwapVaultMaxSlippage,
    UpdateStrategyType,
    UpdateDepositFee,
    UpdateWithdrawFee,
    UpdateCollectFeesFee,
    UpdateReward0Fee,
    UpdateReward1Fee,
    UpdateReward2Fee,
    UpdateAdminAuthority,
    KaminoRewardIndex0TS,
    KaminoRewardIndex1TS,
    KaminoRewardIndex2TS,
    KaminoRewardIndex0RewardPerSecond,
    KaminoRewardIndex1RewardPerSecond,
    KaminoRewardIndex2RewardPerSecond,
    UpdateDepositBlocked,
    UpdateRaydiumProtocolPositionOrBaseVaultAuthority,
    UpdateRaydiumPoolConfigOrBaseVaultAuthority,
    UpdateInvestBlocked,
    UpdateWithdrawBlocked,
    UpdateLocalAdminBlocked,
    DeprecatedUpdateCollateralIdA,
    DeprecatedUpdateCollateralIdB,
    UpdateFlashVaultSwap,
    AllowDepositWithoutInvest,
    UpdateSwapVaultMaxSlippageFromRef,
    ResetReferencePrices,
    UpdateStrategyCreationState,
    UpdateIsCommunity,
    UpdateRebalanceType,
    UpdateRebalanceParams,
    UpdateDepositMintingMethod,
    UpdateLookupTable,
    UpdateReferencePriceType,
    UpdateReward0Amount,
    UpdateReward1Amount,
    UpdateReward2Amount,
    UpdateFarm,
    UpdateRebalancesCapCapacity,
    UpdateRebalancesCapInterval,
    UpdateRebalancesCapCurrentTotal,
    UpdateSwapUnevenAuthority,
    UpdatePendingStrategyAdmin,
}
